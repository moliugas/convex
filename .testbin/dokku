#!/usr/bin/env bash
set -euo pipefail
STATE_DIR="$(cd "$(dirname "$0")" && pwd)/state"
cmd=${1:-}
shift || true
case "$cmd" in
  apps:exists)
    app=${1:-}
    [[ -f "$STATE_DIR/apps/$app" ]] && exit 0 || exit 1
    ;;
  apps:create)
    app=${1:-}
    touch "$STATE_DIR/apps/$app"
    echo "Created app $app" >&2
    ;;
  domains:enable)
    exit 0
    ;;
  domains:set)
    exit 0
    ;;
  plugin:list)
    # Output lines containing plugin names; grep checks for substrings
    echo "letsencrypt 0.0.0"
    echo "postgres 0.0.0"
    ;;
  postgres:info)
    db=${1:-}
    [[ -f "$STATE_DIR/db/$db" ]] && { echo "Service: $db"; exit 0; } || exit 1
    ;;
  postgres:create)
    db=${1:-}
    touch "$STATE_DIR/db/$db"
    echo "Created postgres service $db" >&2
    ;;
  postgres:links)
    db=${1:-}
    if [[ -f "$STATE_DIR/links/$db" ]]; then
      cat "$STATE_DIR/links/$db"
    fi
    ;;
  postgres:link)
    db=${1:-}; app=${2:-}
    echo "$app" >> "$STATE_DIR/links/$db"
    echo "Linked $db to $app" >&2
    ;;
  ports:set)
    exit 0
    ;;
  letsencrypt:set)
    exit 0
    ;;
  letsencrypt:enable)
    exit 0
    ;;
  config:get)
    app=${1:-}; key=${2:-}
    cfg="$STATE_DIR/config/${app}_${key}"
    if [[ -f "$cfg" ]]; then cat "$cfg"; fi
    ;;
  *)
    echo "dokku-mock: unhandled command: $cmd $*" >&2
    exit 0
    ;;
esac
